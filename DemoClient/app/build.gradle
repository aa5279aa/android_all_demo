plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId 'com.xt.client'
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName '1.0'
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
//            storeFile rootProject.file('debug.keystore')
//            storePassword 'android'
//            keyAlias 'androiddebugkey'
//            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // Tests can be Robolectric or instrumented tests
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
        main {
            resources {
                srcDirs 'src/main/resources'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }


//    ndk {
////            ldLibs "log"
////            moduleName "Java2C"
////            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
//        abiFilters "armeabi-v7a", "x86"
//    }
//
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
//            version "3.10.2"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"


    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
//    implementation 'androidx.work:work-runtime-ktx:2.5.0'

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.activity:activity-ktx:1.4.0'
    implementation 'androidx.core:core-ktx:1.7.0'

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.4.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.1"


    implementation "androidx.window:window:1.0.0"

    implementation "com.alibaba:fastjson:1.2.34"
    // OkHttp3
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"

    api "com.squareup.retrofit2:retrofit:2.3.0"
    api "com.squareup.retrofit2:converter-gson:2.3.0"
    api "com.squareup.retrofit2:adapter-rxjava2:2.3.0"

    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    implementation 'com.tencent.wcdb:wcdb-android:1.0.8'
    implementation('com.tencent.wcdb:room:1.0.8') {
        exclude group: 'com.android.support'
    }
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.1'
    implementation 'androidx.core:core-animation:1.0.0-alpha02'
    annotationProcessor project(':router_processor')
    implementation project(':annotationLibrary')

    implementation 'com.tencent:mmkv:1.2.13'

    implementation "com.kuaishou.koom:koom-native-leak:${VERSION_NAME}"
    implementation "com.kuaishou.koom:koom-monitor-base:${VERSION_NAME}"
    implementation "com.kuaishou.koom:koom-java-leak:${VERSION_NAME}"
    implementation "com.kuaishou.koom:koom-thread-leak:${VERSION_NAME}"

    implementation 'androidx.core:core-splashscreen:1.0.0-beta02'

//    implementation project(':applibrary')
//    implementation 'com.github.bumptech.glide:glide:4.9.0'
//    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.3'

//    implementation('com.tencent:mmkv:1.2.13') {
//        不依赖传递，不要该支持库下任何库
//        transitive
//    }

}

//configurations.all {
//    resolutionStrategy {
//        force 'com.squareup.okio:okio:2.1.0'//强制所有依赖库使用该版本
//        exclude "group:'androidx.lifecycle',module:'lifecycle-viewmodel-kt'"
//    }
//}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        // Treat all Kotlin warnings as errors (disabled by default)
        allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'

        // Set JVM target to 1.8
        jvmTarget = "1.8"
    }
}

tasks.withType(Test) {
    systemProperty "robolectric.logging", "stdout"
} 
